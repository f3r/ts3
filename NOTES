- No overlapping of dates
- Ability to set prices per date range
- Minimum Stay (no minimum / no maximum)

- Check in after/before, 30 mins interval, flexible
- Military Time
- 


Step 1
- Cities dropdown should be strict
- Square meter auto convert to square foot

Step 2 
- Array autocomplete for city, state, country

Step 3 Pictures

Amenities

Step 4

Step 5
- Currencies should pass the ISO code based on the money gem
- Dollar sign goes to the beginning
- Pricing: 

  - Price per night should auto compute per week and per month

  - Price per week on label NOT on the textbox : 0.85%
  - Price per day * 7 for week. Price per day * 31 for month

- Currency Policy

- Cancellation Policy is a textbox
- 

Money::Currency::TABLE[:usd] = {
  :priority        => 1,
  :iso_code        => "USD",
  :name            => "United States Dollar",
  :symbol          => "$",
  :subunit         => "Cent"
  :subunit_to_unit => 100,
  :separator       => ".",
  :delimiter       => ","
}

def major_currencies(hash)
  hash.inject([]) do |array, (id, attributes)|
    priority = attributes[:priority]
    if priority && priority < 10
      array[priority] ||= []
      array[priority] << id
    end
    array
  end.compact.flatten
end

"php": {
   "priority": 100,
   "iso_code": "PHP",
   "name": "Philippine Peso",
   "symbol": "₱",
   "subunit": "Centavo",
   "subunit_to_unit": 100,
   "symbol_first": false,
   "html_entity": "&#x20B1;",
   "decimal_mark": ".",
   "thousands_separator": ","
 },




 create_table "places", :force => true do |t|
    t.integer  "user_id"
    t.boolean  "published",                  :default => false
    t.string   "title"
    t.text     "description"
    t.integer  "place_type_id"
    t.integer  "num_bedrooms"
    t.integer  "num_beds"
    t.integer  "num_bathrooms"
    t.float    "sqm"
    t.integer  "max_guests"
    t.text     "photos"
    t.integer  "city_id"
    t.integer  "state_id"
    t.integer  "country_id"
    t.string   "address_1"
    t.string   "address_2"
    t.string   "zip"
    t.float    "lat"
    t.float    "lon"
    t.text     "directions"
    t.boolean  "amenities_aircon",           :default => false
    t.boolean  "amenities_breakfast",        :default => false
    t.boolean  "amenities_buzzer_intercom",  :default => false
    t.boolean  "amenities_cable_tv",         :default => false
    t.boolean  "amenities_dryer",            :default => false
    t.boolean  "amenities_doorman",          :default => false
    t.boolean  "amenities_elevator",         :default => false
    t.boolean  "amenities_family_friendly",  :default => false
    t.boolean  "amenities_gym",              :default => false
    t.boolean  "amenities_hot_tub",          :default => false
    t.boolean  "amenities_kitchen",          :default => false
    t.boolean  "amenities_handicap",         :default => false
    t.boolean  "amenities_heating",          :default => false
    t.boolean  "amenities_hot_water",        :default => false
    t.boolean  "amenities_internet",         :default => false
    t.boolean  "amenities_internet_wifi",    :default => false
    t.boolean  "amenities_jacuzzi",          :default => false
    t.boolean  "amenities_parking_included", :default => false
    t.boolean  "amenities_pets_allowed",     :default => false
    t.boolean  "amenities_pool",             :default => false
    t.boolean  "amenities_smoking_allowed",  :default => false
    t.boolean  "amenities_suitable_events",  :default => false
    t.boolean  "amenities_tennis",           :default => false
    t.boolean  "amenities_tv",               :default => false
    t.boolean  "amenities_washer",           :default => false
    t.string   "currency"
    t.integer  "price_per_night"
    t.integer  "price_per_week"
    t.integer  "price_per_month"
    t.integer  "price_final_cleanup",        :default => 0
    t.integer  "price_security_deposit",     :default => 0
    t.integer  "price_per_night_usd"
    t.integer  "price_per_week_usd"
    t.integer  "price_per_month_usd"
    t.string   "check_in_after"
    t.string   "check_out_before"
    t.integer  "minimum_stay_days",          :default => 0
    t.integer  "maximum_stay_days",          :default => 0
    t.text     "house_rules"
    t.integer  "cancellation_policy",        :default => 1
    t.float    "reviews_overall",            :default => 0.0
    t.float    "reviews_accuracy_avg",       :default => 0.0
    t.float    "reviews_cleanliness_avg",    :default => 0.0
    t.float    "reviews_checkin_avg",        :default => 0.0
    t.float    "reviews_communication_avg",  :default => 0.0
    t.float    "reviews_location_avg",       :default => 0.0
    t.float    "reviews_value_avg",          :default => 0.0
    t.datetime "created_at"
    t.datetime "updated_at"
    t.integer  "price_final_cleanup_usd"
    t.integer  "price_security_deposit_usd"
  end
class PlacePhoto < ActiveRecord::Migration
 def change
    add_column :place_photos, :place_id,            :integer
    add_column :place_photos, :description,            :string
    # Paperclip inherited fields
    add_column :place_photos, :attachment_file_name,        :string
    add_column :place_photos, :attachment_content_type,    :string
    add_column :place_photos, :attachement_file_size,        :integer
    add_column :place_photos, :attachement_updated_at,    :datetime
 end
end

class PropertyType < ActiveRecord::Migration
 def change
    add_column :property_types, :name,    :string
 end
 PropertyType.create([“Apartment”, “House”, “Villa”,”Room”, “Shared Room”, “Dorm”, “Other space”])
end

class City < ActiveRecord::Migration
 def change
    add_column :cities,     :name,        :string
    add_column :cities,     :province_id,    :string
    add_column :cities,    :lat,        :double
    add_column :cities,    :lon,        :double
 end
end
class Province < ActiveRecord::Migration
 def change
    add_column :provinces,     :name,        :string
    add_column :provinces,     :country_id,    :string
    add_column :provinces,    :lat,        :double
    add_column :provinces,    :lon,        :double
 end
end
class Country < ActiveRecord::Migration
 def change
    add_column :countries,     :name,        :string
    add_column :countries,     :country_id,    :string
    add_column :countries,    :lat,        :double
    add_column :countries,    :lon,        :double
 end
end

TO-DO


   #Calendar availability
   apartment_availability : {[
     date_start  : date
     date_end    : date
     price       : integer #inherits currency from apartment_offer['currency']
     status   : {available, booked, not_available}
     booked_by   : {airbnb}
   ]}


   # trusted_listings?
   flagging: {
     innapropiate/offensive
     misleading
     spam
     other
   }

   apartment_reviews : { #1-5 stars
     accuracy
     cleanliness
     check_in
     communication
     location
     value
   }

aparment_comments



[100] has already been taken
[101] can't be blank
[102] too short
[103] is invalid
[104] doesn't match
[105] invalid access token
[106] not found
[107] unconfirmed
[108] unauthenticated
[109] invalid: 'Invalid email or password.'
[110] must sign up
[111] invalid oauth request
[112] This user doesn't have a linked Facebook account
[113] invalid date
[114] Amazon API error
[115] no results
[116] duplicate

