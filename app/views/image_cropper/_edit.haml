.popUp.offerForm
  .popUpHeader
    %h2= t('image_cropping')
    %ul.popUpHeaderMenu
    %p= t('start_cropping')

  .popUpContent.addForm
    #image_cropping_area
      = image_tag @image_cropper.image_url, :id => "jcrop_target"
    = form_for @image_cropper, :url => {:id => @image_cropper.id, :action=>"update", :controller=>"private/image_cropper"}, :html => {:remote => :true, :id => "image_cropping_form" } do |f|
      = f.hidden_field :id_field
      = f.hidden_field :remote_image_url, :value => image_cropper_image_url(@image_cropper.image.url)
      = f.hidden_field :crop_x
      = f.hidden_field :crop_y
      = f.hidden_field :crop_w
      = f.hidden_field :crop_h
      = f.hidden_field :image_h
      = f.hidden_field :image_w
      .centerButton.popUpFoot
        = f.submit 'Crop!', :class => 'button'

:javascript

  jQuery(function($){

        // Create variables (in this scope) to hold the API and image size
        var jcrop_api, boundx, boundy;



        $('form#image_cropping_form').submit(function() {
          // Keep image proportion for cropping
          var h = $('img#jcrop_target').height();
          var w = $('img#jcrop_target').width();
          $('#image_cropper_image_h').val(h);
          $('#image_cropper_image_w').val(w);
        });

        $('#jcrop_target').Jcrop({
          onChange: updatePreview,
          onSelect: updatePreview,
          bgOpacity: .3,
          aspectRatio: 1
        },function(){
          // Use the API to get the real image size
          var bounds = this.getBounds();
          boundx = bounds[0];
          boundy = bounds[1];
          // Store the API in the jcrop_api variable
          jcrop_api = this;
        });


        function updatePreview(c)
        {
          if (parseInt(c.w) > 0)
          {
            $('#image_cropper_crop_x').val(c.x);
            $('#image_cropper_crop_y').val(c.y);
            $('#image_cropper_crop_w').val(c.w);
            $('#image_cropper_crop_h').val(c.h);
          }
        };

      });
