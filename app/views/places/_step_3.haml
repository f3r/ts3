.panel-wrapper
  %h2.title Photos
  .clearfix

  .upload_wrapper
    %input{:type => 'file', :name => 'photo_uploader', :class => 'photo_uploader', :value => 'Select files', :id => "photo_uploader" }
    %p
      (Button will be changed soon. This button supports multiple file upload too!)
  .clearfix

  %h3 Photos
  %p
    You can sort your photos by drag and drop
  .primary_marker
    Primary
  .row
    .span12
      %ul.gallery#photos_list
        - @photos = @place.photos
        = render 'photo_list'
      .clearfix

.arrows.clearfix
  .coda-nav-left
    %a.btn.primary{:href => "#"} &laquo; Previous Step
  .coda-nav-right
    %a.btn.primary{:href => "#"} Next Step &raquo;

:javascript

  var afterSort = function(event, ui) {
    $('#photos_list li').removeClass("active");
    $('#photos_list li:first').addClass("active");

    $('#photos_list li').hover(function() {
      $(this).find(".photo_action").show();
    }, function() {
      $(this).find(".photo_action").hide();      
    });
  };

  var deletePhoto = function(elem) {
    if(confirm("Are you sure?")) {
      elem.parent().parent().fadeOut('slow', function(){
          $(this).remove();    
      });
      afterSort();
      syncPhotos();
    }
  };

  var photoMetadata = function() {
    var photoArray = [];
    $('#photos_list li img').each(function() {
      var imgElem = $(this);
      var img = {};
      img.name = imgElem.attr('data-name');
      img.small = imgElem.attr('data-small');
      img.medium = imgElem.attr('data-medium');
      img.large = imgElem.attr('data-large');
      img.tiny = imgElem.attr('data-tiny');
      img.original = imgElem.attr('data-original');
      img.id = imgElem.attr('data-id');
      img.filename = imgElem.attr('data-filename'); 
      photoArray.push({photo: img});
    });

    return photoArray;
  };

  var syncPhotos = function() {
    $.ajax({
      type: 'PUT',
      url: '/places/' + place_id + '.json',
      data: {place: {photos: JSON.stringify(photoMetadata())}}, 
      success: function() {}
    });
  };

  $(document).ready(function(){

    var uploadify_script_data = {};
    var csrf_token = $('meta[name=csrf-token]').attr('content');
    var csrf_param = $('meta[name=csrf-param]').attr('content');

    $('#photo_uploader').uploadify({
      'uploader'        : '/javascripts/uploadify/uploadify.swf',
      'script'          : "/places/#{@place.id}/upload_photo",
      'cancelImg'       : '/images/close.png',
      'buttonImg'       : '/images/browse-button.png',
      'auto'            : true,
      'multi'           : true,
      'fileDataName'    : 'file',
      'fileDesc'        : 'Photos',
      'buttonText'      : 'Browse',
      'width'           : 230,
      'height'          : 50,
      'wmode'           : 'transparent',
      'fileExt'         : '*.jpg;*.png',
      'scriptData'      : { 'photo_album_id' : #{@place.id}, '_method' : 'post', 'csrf_token' : encodeURI(csrf_param), '#{Rails.application.config.session_options[:key]}' : '#{cookies[Rails.application.config.session_options[:key]]}', 'token' : '#{current_token}' , 'format': 'json' },
      'onSelect'        : function(event, data) {  },
      'onComplete'  : function(event, ID, fileObj, response, data) {
        $('#photos_list').html(response);
        afterSort();
      }
    });


    $('#photos_list').sortable({ grid: [8,2], stop: function() {
        afterSort();
        syncPhotos();
      }
    });

    afterSort();
  });
