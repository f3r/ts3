.panel-wrapper
  .alert.alert-info
    = link_to t("places.wizard.photos.read_photo_faq", :site_name => SITE_NAME), home_photo_faq_path
  .clearfix
  .photo_wrapper

  .clearfix
  .photos_wrapper.well
    %p= t("places.wizard.photos.tip")
      
    .primary_marker
      = t("places.wizard.photos.primary")
    .row
      .span9
        %ul.gallery#photos_list
          - @photos = @place.photos
          = render 'photos/list'
        .clearfix

  .well
    #photoQueue

    .upload_wrapper
      %input{:type => 'file', :name => 'photo_uploader', :class => 'photo_uploader', :id => "photo_uploader" } 
      %p= t("places.wizard.photos.upload_photo_hint")
  .arrows.clearfix
    .float-left
      %a.btn.primary{:href => "javascript:switchToPanel('#1')"}=raw t("places.wizard.previous_step")
    .float-right
      %a.btn.primary{:href => "javascript:switchToPanel('#3')"}=raw t("places.wizard.next_step")

:javascript
  /* TODO: Finish moving this to wizard.js */

  var updatePhotoLabel = function(photo_id, label) {
    $.ajax({
      type: 'PUT',
      url: '/places/#{@place.id}/photos/' + photo_id + '.json',
      data: {name: label}
    });
  };

  $(function() {
    var uploadify_script_data = {};
    var csrf_token = $('meta[name=csrf-token]').attr('content');
    var csrf_param = $('meta[name=csrf-param]').attr('content');
    
    PhotoManager.initialize('#{sort_place_photos_path(@place.id)}');

    $('#photo_uploader').uploadify({
      'uploader'        : '/assets/uploadify/uploadify.swf',
      'script'          : "/places/#{@place.id}/photos",
      'cancelImg'       : '/assets/close.png',
      'buttonImg'       : '/assets/browse-button.png',
      'auto'            : true,
      'multi'           : true,
      'fileDataName'    : 'file',
      'fileDesc'        : 'Photos',
      'buttonText'      : 'Browse222',
      'width'           : 400,
      'height'          : 200,
      'queueID'         : 'photoQueue',
      'wmode'           : 'transparent',
      'fileExt'         : '*.jpg;*.png',
      'scriptData'      : {'_method' : 'post', 'csrf_token' : encodeURI(csrf_param), '#{Rails.application.config.session_options[:key]}' : '#{cookies[Rails.application.config.session_options[:key]]}', 'token' : '#{current_token}' , 'format': 'json' },
      'onComplete'  : function(event, ID, fileObj, response, data) {
        PhotoManager.insert(response);        
      }
    });
  });

