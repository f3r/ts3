.panel-wrapper
  .alert.alert-info
    = link_to t(:read_photo_faq), home_photo_faq_path
  .clearfix
  .photo_wrapper

  .clearfix
  .photos_wrapper.well
    %p= t(:you_can_sort)
      
    .primary_marker
      = t(:primary)
    .row
      .span9
        %ul.gallery#photos_list
          - @photos = @place.photos
          = render 'photos/list'
        .clearfix

  .well
    #photoQueue

    .upload_wrapper
      %input{:type => 'file', :name => 'photo_uploader', :class => 'photo_uploader', :id => "photo_uploader" } 
      %p= t(:upload_photo_hint)
  .arrows.clearfix
    .float-left
      %a.btn.primary{:href => "javascript:switchToPanel('#1')"}=raw t(:previous_step)
    .float-right
      %a.btn.primary{:href => "javascript:switchToPanel('#3')"}=raw t(:next_step)

:javascript
  /* TODO: Finish moving all this to wizard.js */
  
  var showPhoto = function() {
    setPhoto($(this).find('img'));
  };

  var showLatestPhoto = function() {
    var photo = $('#photos_list li img').last();
    if(photo.size() > 0) {
      setPhoto(photo);
    } else {
      $('.photo_wrapper').empty();
    }
  }

  var setPhoto = function(photo) {
    $('.photo_wrapper').empty();

    var img_wrapper = $("<div class='active-photo well'></div>");

    var large_photo = photo.clone();
    large_photo.attr('src', large_photo.attr('data-large'));
    img_wrapper.append(large_photo);

    var large_photo_label_text = "";

    if(large_photo.attr('data-name') != "") {
      large_photo_label_text = large_photo.attr('data-name');
    } else {
      large_photo_label_text = "#{t(:click_here_to_add_caption)}";
    }

    var large_photo_label = $("<div class='active-label' data-image-id='" + large_photo.attr("data-id") + "'>" + large_photo_label_text + "</div>");

    img_wrapper.append(large_photo_label);

    $('.active-label').inlineEdit({
      placeholder: '#{t(:click_here_to_add_caption)}',
      save: function(e, data) {
        trunc = data.value
        if (data.value.length > 20) {
          trunc = data.value.substring(0, 20) + '...';
        }
        img_div = $("#image-" + $(this).attr('data-image-id'));
        img_div.find('img.photo').attr('data-name', data.value);
        img_div.find('img.photo').attr('data-trunc_name', trunc);
        img_div.find('~ .photo_title').html(trunc);
        updatePhotoLabel($(this).attr('data-image-id'), data.value)
      }
    });

    $('.photo_wrapper').append(img_wrapper);
  }

  var updatePhotoLabel = function(photo_id, label) {
    $.ajax({
      type: 'PUT',
      url: '/places/#{@place.id}/photos/' + photo_id + '.json',
      data: {name: label}
    });
  };

  var uploadify_script_data = {};
  var csrf_token = $('meta[name=csrf-token]').attr('content');
  var csrf_param = $('meta[name=csrf-param]').attr('content');

  $(function() {
    
    PhotoManager.initialize('#{sort_place_photos_path(@place.id)}');

    $('#photo_uploader').uploadify({
      'uploader'        : '/assets/uploadify/uploadify.swf',
      'script'          : "/places/#{@place.id}/photos",
      'cancelImg'       : '/assets/close.png',
      'buttonImg'       : '/assets/browse-button.png',
      'auto'            : true,
      'multi'           : true,
      'fileDataName'    : 'file',
      'fileDesc'        : 'Photos',
      'buttonText'      : 'Browse222',
      'width'           : 400,
      'height'          : 200,
      'queueID'         : 'photoQueue',
      'wmode'           : 'transparent',
      'fileExt'         : '*.jpg;*.png',
      'scriptData'      : { 'photo_album_id' : #{@place.id}, '_method' : 'post', 'csrf_token' : encodeURI(csrf_param), '#{Rails.application.config.session_options[:key]}' : '#{cookies[Rails.application.config.session_options[:key]]}', 'token' : '#{current_token}' , 'format': 'json' },
      'onComplete'  : function(event, ID, fileObj, response, data) {
        $('#photos_list').html(response);
        //afterSort();
        showLatestPhoto();
        validatePanels();        
      }
    });
  });

