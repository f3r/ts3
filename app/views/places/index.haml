%section.clearfix
  .row
    .span12
      .wrap-searchbar
        .search-bar.search-bar1

          .float-left
            %h2
              Singapore, Singapore
            = hidden_field_tag :currency, get_current_currency

          .float-right
            .controls
              = select_tag :guests, options_for_select(max_guest_options), :style => "width:100px"
              = t(:from)
              = text_field_tag "check_in", @results['check_in'], :placeholder => t(:arriving_on), :class => 'textbox big check-in-picker', "data-date" => :from
              = t(:to)
              = text_field_tag "check_out", @results['check_out'], :placeholder => t(:departing_on), :class => 'textbox big check-out-picker', "data-date" => :to

        .search-bar.search-bar2
          .buttons
            .toggle
              = link_to '', '#', :class => 'disp-list current', :id => 'disp-list'
              = link_to '', '#', :class => 'disp-gallery', :id => 'disp-gallery'
          .results
            %span#num_search_results
              %span.results_count= @results['results']
              = t(:results)
          .sorting
            = t(:sort_by)
            = select_tag :sort, options_for_select(sort_options), :class => 'medium' 

      .results
        #search_results
          = render 'search_results', :places => @results['places']
      .loading.center.hide= image_tag('/images/loading.gif')
    .span4
      .search-aside
        %form.panel-wrap
          %ul.panel-expander
            %li
              .header= t(:type)
              .content
                %ul#types-list{:class => "inputs-list"}
                  - place_types_list.each do |p_type|
                    %li
                      %label
                        %span.left
                          = check_box_tag :place_type, p_type[0], (!@results['place_type_count'].blank? && @results['place_type_count'][p_type[2]].to_i > 0), :id => p_type[2]
                          %span= p_type[0]
                        %span.right
                          %span= "(#{@results['place_type_count'][p_type[2]]})" if !@results['place_type_count'].blank?

            %li
              .header= t(:price_per_night)
              .content
                #max_price.float-right= @max_price
                #min_price= @min_price

                #price-slider
#place_result_pages.hide
  .page_num= 1
  .current_page= @results['current_page']
  .total_page= @results['total_pages']
  .from_index= true

:javascript

  var pull_data = function() {
    $(".results").append("<span id='search-load-indicator'><img src='/images/loading.gif' alt='loading...' /></span>");
    $('html, body').animate({scrollTop: 0}, '1000');
    $("#search_results").css('opacity', '.3');
    $('#place_result_pages .from_index').html('false');
    $('#place_result_pages .page_num').html(1);

    var place_type_ids = new Array;
    $.each($("#types-list input"), function() {
      if ($(this).is(":checked")) {
        place_type_ids.push(this.id);
      }
    });

    $.ajax({
      url: '/places/search',
      data: {
        guests: $("#guests").val(),
        sort: $("#sort").val(),
        min_price: $("#min_price").html(),
        max_price: $("#max_price").html(),
        currency: $('#currency').val(),
        check_in: $('#check_in').val(),
        check_out: $('#check_out').val(),
        place_type_ids: place_type_ids
      },
      success: function(data) {
        $('.results > #search-load-indicator').remove();
        $('#search_results').css('opacity', '1');

        $("#search_results").html(data.place_data);
        $("#num_search_results .results_count").html(data.results);

        $("#types-list").empty();
        $.each(data.place_type_count, function(type, count) {
          type_builder(type, count);
        });

        if ($("#disp-gallery").hasClass('current')) {
          $(".show-grid").show();
          $(".list-display").hide();
        } else {
          $(".list-display").show();
          $(".show-grid").hide();
        }
        $('#place_result_pages .current_page').html(data.current_page);
        $('#place_result_pages .total_page').html(data.total_pages);
      }
    });
    return false;
  };

  var type_builder = function(type, count) {
    var checked_ = ''
    if(count != 0) {
      checked_ = ' checked="checked" ';
    }
    var list = '<li>'+
      '<label>'+
        '<div class="left"><input'+checked_+' id="'+type+'" type="checkbox" value="1" /> <span>'+type.human_titleize()+'</span></div>' +
        '<div class="right"><span>('+count+')</span></div>' +
      '</label>';

    $("#types-list").append(list);

  };

  $("#guests, #sort").change(function() {
    pull_data();
  });

  $("#types-list input").live('click', function() {
    pull_data();
  });

  $("#price-slider").slider({
    range: true,
    min: #{@min_price},
    max: #{@max_price},
    values: [#{@min_price}, #{@max_price}],
    step: 5,
    slide: function( event, ui ) {
      $("#min_price").html(ui.values[0]);
      $("#max_price").html(ui.values[1]);
    },
    change: function() {
      pull_data();
    }
  });

  $("#disp-gallery").click(function() {
    $(".show-grid").show();
    $(".list-display").hide();
    $(this).addClass('current');
    $("#disp-list").removeClass('current');
    return false;
  });

  $("#disp-list").click(function() {
    $(".list-display").show();
    $(".show-grid").hide();
    $(this).addClass('current');
    $("#disp-gallery").removeClass('current');
    return false;
  });

  String.prototype.human_titleize = function() {
    var arr = new Array();
    $.each(this.split('_'), function(str) {
      arr.push(this.charAt(0).toUpperCase() + this.slice(1));
    });

    return arr.join(' ');
  };
  
  $('.check-in-picker, .check-out-picker').datepicker('destroy').datepicker({
    // dateFormat: 'dd/mm/yy',
    dateFormat: 'yy-mm-dd',
    minDate: +1,
    onSelect: function(selectedDate) {
      pull_data();
      var me = $(this);
      var who = me.attr("data-date");
      var instance = me.data("datepicker");

      var date = $.datepicker.parseDate(
            instance.settings.dateFormat ||
            $.datepicker._defaults.dateFormat,
            selectedDate, instance.settings);

      if (who == 'from') {
        from = me.next();
        from.datepicker("option", "minDate", date);
      } else {
        to = me.prev();
        to.datepicker("option", "maxDate", date);
      }
    }
  });

  (function() {
    var loading = false;

    function nearBottomOfPage() {
      return $(window).scrollTop() > $(document).height() - $(window).height() - 200;
    }

    function lastPage() {
      return $('#place_result_pages .current_page').text() == $('#place_result_pages .total_page').text();
    }

    $(window).scroll(function() {
      if (loading) {
        return;
      }

      if(nearBottomOfPage() && !lastPage()) {
        loading = true;
        page = parseInt($('#place_result_pages .page_num').text());
        page++;
        if($('#place_result_pages .from_index').text() == 'true') {
          $.ajax({
            url: '/places?page=' + page,
            type: 'get',
            dataType: 'script',
            beforeSend: function() {
              $('.loading').show();
            },
            success: function() {
              $(window).sausage('draw');
              $('#place_result_pages .page_num').html(page);
              loading = false;
              $('.loading').hide();
            }
          });
        } else {
          page = parseInt($('#place_result_pages .page_num').text());
          page++;
           var place_type_ids = new Array;
            $.each($("#types-list input"), function() {
              if ($(this).is(":checked")) {
                place_type_ids.push(this.id);
              }
            });

            $.ajax({
              url: '/places/search',
              data: {
                guests: $("#guests").val(),
                sort: $("#sort").val(),
                min_price: $("#min_price").html(),
                max_price: $("#max_price").html(),
                currency: $('#currency').val(),
                check_in: $('#check_in').val(),
                check_out: $('#check_out').val(),
                place_type_ids: place_type_ids,
                page: page
              },
              beforeSend: function() {
                $('.loading').show();
              },
              success: function(data) {
                $("#search_results").append(data.place_data);
                $("#num_search_results .results_count").html(data.results);

                $("#types-list").empty();
                $.each(data.place_type_count, function(type, count) {
                  type_builder(type, count);
                });

                if ($("#disp-gallery").hasClass('current')) {
                  $(".show-grid").show();
                  $(".list-display").hide();
                } else {
                  $(".list-display").show();
                  $(".show-grid").hide();
                }
                $('#place_result_pages .from_index').html('false');
                $('#place_result_pages .page_num').html(page);
                $('#place_result_pages .current_page').html(data.current_page);
                $('#place_result_pages .total_page').html(data.total_pages);
                $(window).sausage('draw');
                loading = false;
                $('.loading').hide();
              }
            });
        }
      }
    });

    $(window).sausage();
  }());
