- content_for :javascripts do
  %link{:rel => "stylesheet", :href => "/javascripts/datepicker/css/datepicker.css", :type => "text/css"}
  %script{:src => '/javascripts/datepicker/js/datepicker.js', :type => 'text/javascript'}
  %script{:src => '/javascripts/datepicker/js/eye.js', :type => 'text/javascript'}
  %script{:src => '/javascripts/datepicker/js/utils.js', :type => 'text/javascript'}
  %script{:src => '/javascripts/date_format.js', :type => 'text/javascript'}

%ul.breadcrumb
  %li
    = link_to @place['title'], place_path(@place["id"])
    %span.divider &raquo;
  %li.active
    =t(:rent)

.rent_place_page
  .row
    .span12

      = form_tag(availability_place_path, :method => :post, :id => "check_availability") do

        .panel
          .panel-wrapper
            %h2.title
              = t(:place_details)

        .row.info
          .span4
            .thumb.center-div-image
              = image_tag(@place['photos'].blank? ? "photo-missing.png" : @place['photos'][0]['photo']['medium'])
          .span8
            %h3= @place.title
            .clearfix
            .span3
              .location
                = "#{@place.city_name}, #{@place.country_name}"
            .span2
              .type
                .title= @place.place_type 
              .micro
                .title
                  - if !@place['size_sqf'].nil? or !@place['size_sqm'].nil?
                    = get_current_size_unit == "sqf" ? @place['size_sqf'].round(2) : @place['size_sqm'].round(2)
                    =raw get_pref_size_unit
            .span2.price-data-block
              .price
                - if !@place['price_per_night'].nil?
                  .figure
                    = "#{get_pref_currency}#{@place['price_per_night']}"
                  .micro-price
                    = t(:per_night)
                - else
                  &nbsp;

        .row.details
          .span2#checkin-div
            .check_in
              %strong= t(:check_in)
            %span
              = @place['check_in_after'].blank? ? t(:check_in_flexible) : @place['check_out_before']
          .span2#checkout-div
            .check_out
              %strong= t(:check_out)
            %span
              = @place['check_out_before'].blank? ? t(:check_in_flexible) : @place['check_out_before']
          .span3
            .cancellation_policy
              %strong= t(:cancellation_policy)
            %span
              - policy = LookupsHelper::CANCELLATION_POLICIES[@place['cancellation_policy']]
              = cancellation_desc(@place)
              = link_to '?', '#', :class => 'twipsy-link', 'data-original-title' => raw(t("#{policy}_cancellation".to_sym) + "<br/><br/>#{t(:see_our)} <a href='#' data-controls-modal='cancellation_policy_text' data-backdrop='static'>#{t(:cancellation_policy)}</a> #{t(:for_more_info)}.")

        .row.details
          .span2#guests-div
            .guests
              %strong= t(:guests)
            %span
              = @place['max_guests']
          .span2#rooms-div
            .bedrooms
              %strong= t(:bedrooms)
            %span
              = @place['num_bedrooms']
          - if !@place['house_rules'].blank?
            .span3
              .house_rules
                %strong= t(:house_rules)
              %span
                = link_to t(:view_house_rules), '#', "data-controls-modal" => "house-rules-modal"
                #house-rules-modal.hide.modal.fade
                  .modal-header
                    %h3= t(:house_rules)
                  .modal-body= @place['house_rules']
                  .modal-footer
                    %button.btn{:onclick => "$('#house-rules-modal').modal('hide'); return false;"}= t(:close)

        .panel
          .panel-wrapper
            %h2.title
              = t(:stay_details)

        .row
          .span16
            %fieldset
              <p id="date_picker"></p>
              <p><a href="#" id="clearSelection">Clear selection</a></p>
              .clearfix
                .input.required
                  = label_tag :check_in, t(:arriving)
                  = text_field_tag :check_in, (!params['check_in'].blank? ? params['check_in'] : Date.today), :class => "validate[required,ajax[ajaxCheckAvailability],past[NOW]]"
                .input.required
                  = label_tag :check_out, t(:departing)
                  = text_field_tag :check_out, (!params['check_out'].blank? ? params['check_out'] : Date.today), :class => "validate[required,ajax[ajaxCheckAvailability],past[NOW]]"
                .input
                  = label_tag t(:duration)
                  .duration
                    %span 0
                    =t(:days)

        .panel
          .panel-wrapper
            %h2.title
              = t(:contact_information)
        %fieldset
          =fields_for "user", @user do |f|
            .input.required
              = f.label :phone_number, t(:mobile_phone_number)
              = f.text_field :phone_mobile, :class => "validate[required]"
            .input.required
              = f.label :passport_number, t(:passport_number)
              = f.text_field :passport_number, :class => "validate[required]"
          .clearfix
            = check_box_tag :terms, 1, false, :class => "validate[required]"
            = t(:read_agreement)
            = link_to t(:terms_and_conditions), '/terms-and-conditions', :target => :blank

            = hidden_field_tag :user_id, current_user['id']
            = hidden_field_tag :place_id, @place["id"]

          %button.btn.primary
            = t(:continue)

= render :partial => 'cancellation_policy'

:javascript

  $(document).ready(function() {
    $("#check_availability").validationEngine();
    update_dates();

    $('form#check_availability input#user_phone_mobile, form#check_availability input#user_passport_number').change(trackChange).blur(sendFieldUpdate);
    //hide and show past date
    $('.datepickerGoPrev a').hide();
    $('.datepickerGoNext a:first').hide();
    var cur_date = new Date();
    $('.datepickerGoNext a').click(function() {
      var first_cal_month = $('.datepickerMonth span:first').text();
      var cur_month = new Date(first_cal_month);
      if (cur_date.getMonth() == cur_month.getMonth() + 1) {
        $('.datepickerGoPrev a:first').hide();
      } else {
        $('.datepickerGoPrev a:first').show();
      }
    });
    $('.datepickerGoPrev a').click(function() {
      var first_cal_month = $('.datepickerMonth span:first').text();
      var cur_month = new Date(first_cal_month);
      if (cur_date.getMonth() == cur_month.getMonth() - 1) {
        $('.datepickerGoPrev a:first').hide();
      } else {
        $('.datepickerGoPrev a:first').show();
      }
    });

  });
  function daydiff(first, second) {
    return (second-first)/(1000*60*60*24)
  }
  
  function update_duration(start,end) {
    diff = daydiff(start, end);
    if (diff > 0) {
      $('div.duration span').html(Math.round(diff)-1);
    } else {
      $('div.duration span').html(0);
    }
  }
  
  function update_dates() {
    check_in = $('#check_in').val();
    check_out = $('#check_out').val();
    if (check_in && check_out) {
      date = [check_in,check_out];
      update_duration(new Date(check_in),new Date(check_out))
      $('#date_picker').DatePickerSetDate(date, 0);
    } else {
      $('#date_picker').DatePickerClear();
    }
  }
  
  $('#check_in,#check_out').change(function() {
    update_dates();
  });


  var trackChange = function() {
    $(this).attr('data-changed', "1");
  };

  var sendFieldUpdate = function() {

    var elem = $(this);
    // Check if we have changed values
    if(elem.attr('data-changed') == "1" && !validateElement(elem)) {
      hideIndicator(elem);
      showIndicator(elem);

      user_id = $("#user_id").val(); // TODO: Quick update for now

      $.ajax({
        type: 'PUT',
        url: '/users/' + user_id + '.json',
        data: $(this).serialize(),
        success: function() {
          showSavedIndicator(elem);
          elem.attr('data-changed', '0');
        }
      });
      // validatePanels();
    }
  };
  
  (function($){
  	var initLayout = function() {

      var today = new Date();
      var dd = today.getDate();
      var mm = today.getMonth()+1; //January is 0!
      if (today.getMonth() == 11) {
        next_month = new Date(today.getFullYear() + 1, 0, 1);
      } else {
        next_month = new Date(today.getFullYear(), today.getMonth() + 1, 1);
      }
      console.log(next_month);
      console.log(today.getYear());
      var yyyy = today.getFullYear();
      if(dd<10){dd='0'+dd} if(mm<10){mm='0'+mm} var today = yyyy+'/'+mm+'/'+dd;

  		$('#clearSelection').bind('click', function(){
  			$('#date_picker').DatePickerClear();
  			$('#check_in,#check_out').val("");
  			return false;
  		});
  		$('#date_picker').DatePicker({
  			flat: true,
        date: [today,next_month],
  			current: next_month,
  			calendars: 2,
  			mode: 'range',
  			starts: 1,
        formated: true,
  			onRender: function(date) {
          date = date.format('Y-m-d')
      		return {
            // disabled: (date == "2011-12-04"),
            // className: (date == "2011-12-04") ? 'occupied' : false
    			}
        },
      	onChange: function(formated, dates){
      	  $('#check_in').val(formated[0]);
      	  $('#check_out').val(formated[1]);
      	  update_duration(dates[0],dates[1]);
      	}
  		});
  	};
  	EYE.register(initLayout, 'init');
  })(jQuery)
