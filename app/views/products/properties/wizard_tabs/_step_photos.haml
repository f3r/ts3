.panel-wrapper
  = form_for @resource, :as => :listing, :url => listing_path(@resource), :class => 'form-stacked', :html => {:id => "wizard_form", :method => :put} do |f|
    .alert.alert-info
      = link_to t("places.wizard.photos.read_photo_faq"), home_photo_faq_path
    .clearfix
    .photo_wrapper

    .clearfix
    .photos_wrapper.well
      %p= t("places.wizard.photos.tip")

      .primary_marker
        = t("places.wizard.photos.primary")
      .row
        .span9
          %ul.gallery#photos_list
            = render 'photos/list'
          .clearfix

    .well
      .upload_wrapper
        #uploader
        %p= t("places.wizard.photos.upload_photo_hint")
    .arrows.clearfix
      .float-left
        %a.btn.primary{:href => "javascript:switchToPanel('#1')"}=raw t("places.wizard.previous_step")
      .float-right
        %a.btn.primary{:href => "javascript:switchToPanel('#3')"}=raw t("places.wizard.next_step")

:javascript
  /* TODO: Finish moving this to wizard.js */

  var updatePhotoLabel = function(photo_id, label) {
    $.ajax({
      type: 'PUT',
      url: '/listings/#{@resource.id}/photos/' + photo_id + '.json',
      data: {name: label}
    });
  };

  $(function() {
    var csrf_token = $('meta[name=csrf-token]').attr('content');
    var csrf_param = $('meta[name=csrf-param]').attr('content');

    PhotoManager.initialize('#{sort_listing_photos_path(@resource.id)}');

    var uploader = $("#uploader").pluploadQueue({
      runtimes: 'html5,flash,silverlight',
      url: '/listings/#{@resource.id}/photos',
      max_file_size: '10mb',
      multiple_queues: true,
      multipart: true,
      dragdrop:true,
      multipart_params: {
        '_method' : 'post',
        '#{Rails.application.config.session_options[:key]}' : '#{cookies[Rails.application.config.session_options[:key]]}',
        'authenticity_token' : encodeURI(csrf_token),
        'csrf_token' : encodeURI(csrf_param),
        'format': 'json'
      },
      filters: [
        {title: "Images", extensions: "jpg,jpeg,png"}
      ],
      init: {
        FileUploaded: function(up, file, info) {
          PhotoManager.insert(info["response"]);
        }
      }
    });
  });

